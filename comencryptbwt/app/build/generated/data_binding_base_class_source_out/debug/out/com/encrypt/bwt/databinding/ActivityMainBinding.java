// Generated by view binder compiler. Do not edit!
package com.encrypt.bwt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.encrypt.bwt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView backgroundImage;

  @NonNull
  public final Button buttonBubbleEncryption;

  @NonNull
  public final Button buttonFileEncryption;

  @NonNull
  public final Button buttonStartOverlay;

  @NonNull
  public final Button buttonStopOverlay;

  @NonNull
  public final TextView cipherTypeLabel;

  @NonNull
  public final Spinner cipherTypeSpinner;

  @NonNull
  public final Button decryptButton;

  @NonNull
  public final TextView decryptedTextLabel;

  @NonNull
  public final EditText decryptedTextOutput;

  @NonNull
  public final Button encryptButton;

  @NonNull
  public final EditText encryptedTextInput;

  @NonNull
  public final TextView encryptedTextLabel;

  @NonNull
  public final EditText encryptedTextOutput;

  @NonNull
  public final Button manageKeysButton;

  @NonNull
  public final EditText plainTextInput;

  @NonNull
  public final TextView plainTextLabel;

  @NonNull
  public final EditText secretKeyInput;

  @NonNull
  public final TextView secretKeyLabel;

  @NonNull
  public final Button selectKeyButton;

  private ActivityMainBinding(@NonNull FrameLayout rootView, @NonNull ImageView backgroundImage,
      @NonNull Button buttonBubbleEncryption, @NonNull Button buttonFileEncryption,
      @NonNull Button buttonStartOverlay, @NonNull Button buttonStopOverlay,
      @NonNull TextView cipherTypeLabel, @NonNull Spinner cipherTypeSpinner,
      @NonNull Button decryptButton, @NonNull TextView decryptedTextLabel,
      @NonNull EditText decryptedTextOutput, @NonNull Button encryptButton,
      @NonNull EditText encryptedTextInput, @NonNull TextView encryptedTextLabel,
      @NonNull EditText encryptedTextOutput, @NonNull Button manageKeysButton,
      @NonNull EditText plainTextInput, @NonNull TextView plainTextLabel,
      @NonNull EditText secretKeyInput, @NonNull TextView secretKeyLabel,
      @NonNull Button selectKeyButton) {
    this.rootView = rootView;
    this.backgroundImage = backgroundImage;
    this.buttonBubbleEncryption = buttonBubbleEncryption;
    this.buttonFileEncryption = buttonFileEncryption;
    this.buttonStartOverlay = buttonStartOverlay;
    this.buttonStopOverlay = buttonStopOverlay;
    this.cipherTypeLabel = cipherTypeLabel;
    this.cipherTypeSpinner = cipherTypeSpinner;
    this.decryptButton = decryptButton;
    this.decryptedTextLabel = decryptedTextLabel;
    this.decryptedTextOutput = decryptedTextOutput;
    this.encryptButton = encryptButton;
    this.encryptedTextInput = encryptedTextInput;
    this.encryptedTextLabel = encryptedTextLabel;
    this.encryptedTextOutput = encryptedTextOutput;
    this.manageKeysButton = manageKeysButton;
    this.plainTextInput = plainTextInput;
    this.plainTextLabel = plainTextLabel;
    this.secretKeyInput = secretKeyInput;
    this.secretKeyLabel = secretKeyLabel;
    this.selectKeyButton = selectKeyButton;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backgroundImage;
      ImageView backgroundImage = ViewBindings.findChildViewById(rootView, id);
      if (backgroundImage == null) {
        break missingId;
      }

      id = R.id.buttonBubbleEncryption;
      Button buttonBubbleEncryption = ViewBindings.findChildViewById(rootView, id);
      if (buttonBubbleEncryption == null) {
        break missingId;
      }

      id = R.id.buttonFileEncryption;
      Button buttonFileEncryption = ViewBindings.findChildViewById(rootView, id);
      if (buttonFileEncryption == null) {
        break missingId;
      }

      id = R.id.buttonStartOverlay;
      Button buttonStartOverlay = ViewBindings.findChildViewById(rootView, id);
      if (buttonStartOverlay == null) {
        break missingId;
      }

      id = R.id.buttonStopOverlay;
      Button buttonStopOverlay = ViewBindings.findChildViewById(rootView, id);
      if (buttonStopOverlay == null) {
        break missingId;
      }

      id = R.id.cipherTypeLabel;
      TextView cipherTypeLabel = ViewBindings.findChildViewById(rootView, id);
      if (cipherTypeLabel == null) {
        break missingId;
      }

      id = R.id.cipherTypeSpinner;
      Spinner cipherTypeSpinner = ViewBindings.findChildViewById(rootView, id);
      if (cipherTypeSpinner == null) {
        break missingId;
      }

      id = R.id.decryptButton;
      Button decryptButton = ViewBindings.findChildViewById(rootView, id);
      if (decryptButton == null) {
        break missingId;
      }

      id = R.id.decryptedTextLabel;
      TextView decryptedTextLabel = ViewBindings.findChildViewById(rootView, id);
      if (decryptedTextLabel == null) {
        break missingId;
      }

      id = R.id.decryptedTextOutput;
      EditText decryptedTextOutput = ViewBindings.findChildViewById(rootView, id);
      if (decryptedTextOutput == null) {
        break missingId;
      }

      id = R.id.encryptButton;
      Button encryptButton = ViewBindings.findChildViewById(rootView, id);
      if (encryptButton == null) {
        break missingId;
      }

      id = R.id.encryptedTextInput;
      EditText encryptedTextInput = ViewBindings.findChildViewById(rootView, id);
      if (encryptedTextInput == null) {
        break missingId;
      }

      id = R.id.encryptedTextLabel;
      TextView encryptedTextLabel = ViewBindings.findChildViewById(rootView, id);
      if (encryptedTextLabel == null) {
        break missingId;
      }

      id = R.id.encryptedTextOutput;
      EditText encryptedTextOutput = ViewBindings.findChildViewById(rootView, id);
      if (encryptedTextOutput == null) {
        break missingId;
      }

      id = R.id.manageKeysButton;
      Button manageKeysButton = ViewBindings.findChildViewById(rootView, id);
      if (manageKeysButton == null) {
        break missingId;
      }

      id = R.id.plainTextInput;
      EditText plainTextInput = ViewBindings.findChildViewById(rootView, id);
      if (plainTextInput == null) {
        break missingId;
      }

      id = R.id.plainTextLabel;
      TextView plainTextLabel = ViewBindings.findChildViewById(rootView, id);
      if (plainTextLabel == null) {
        break missingId;
      }

      id = R.id.secretKeyInput;
      EditText secretKeyInput = ViewBindings.findChildViewById(rootView, id);
      if (secretKeyInput == null) {
        break missingId;
      }

      id = R.id.secretKeyLabel;
      TextView secretKeyLabel = ViewBindings.findChildViewById(rootView, id);
      if (secretKeyLabel == null) {
        break missingId;
      }

      id = R.id.selectKeyButton;
      Button selectKeyButton = ViewBindings.findChildViewById(rootView, id);
      if (selectKeyButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((FrameLayout) rootView, backgroundImage,
          buttonBubbleEncryption, buttonFileEncryption, buttonStartOverlay, buttonStopOverlay,
          cipherTypeLabel, cipherTypeSpinner, decryptButton, decryptedTextLabel,
          decryptedTextOutput, encryptButton, encryptedTextInput, encryptedTextLabel,
          encryptedTextOutput, manageKeysButton, plainTextInput, plainTextLabel, secretKeyInput,
          secretKeyLabel, selectKeyButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

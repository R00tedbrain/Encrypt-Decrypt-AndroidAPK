// Generated by view binder compiler. Do not edit!
package com.encrypt.bwt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.encrypt.bwt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFileEncryptionBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RadioGroup actionRadioGroup;

  @NonNull
  public final Button buttonPickFile;

  @NonNull
  public final Button buttonPickKey;

  @NonNull
  public final Button buttonPickOutputDir;

  @NonNull
  public final Button buttonProcess;

  @NonNull
  public final RadioButton radioDecrypt;

  @NonNull
  public final RadioButton radioEncrypt;

  @NonNull
  public final ScrollView scroll;

  @NonNull
  public final Spinner spinnerCipher;

  @NonNull
  public final TextView textChosenKey;

  @NonNull
  public final TextView textOutputDir;

  @NonNull
  public final TextView textResult;

  @NonNull
  public final TextView textSelectedFile;

  @NonNull
  public final TextView titleText;

  private ActivityFileEncryptionBinding(@NonNull ScrollView rootView,
      @NonNull RadioGroup actionRadioGroup, @NonNull Button buttonPickFile,
      @NonNull Button buttonPickKey, @NonNull Button buttonPickOutputDir,
      @NonNull Button buttonProcess, @NonNull RadioButton radioDecrypt,
      @NonNull RadioButton radioEncrypt, @NonNull ScrollView scroll, @NonNull Spinner spinnerCipher,
      @NonNull TextView textChosenKey, @NonNull TextView textOutputDir,
      @NonNull TextView textResult, @NonNull TextView textSelectedFile,
      @NonNull TextView titleText) {
    this.rootView = rootView;
    this.actionRadioGroup = actionRadioGroup;
    this.buttonPickFile = buttonPickFile;
    this.buttonPickKey = buttonPickKey;
    this.buttonPickOutputDir = buttonPickOutputDir;
    this.buttonProcess = buttonProcess;
    this.radioDecrypt = radioDecrypt;
    this.radioEncrypt = radioEncrypt;
    this.scroll = scroll;
    this.spinnerCipher = spinnerCipher;
    this.textChosenKey = textChosenKey;
    this.textOutputDir = textOutputDir;
    this.textResult = textResult;
    this.textSelectedFile = textSelectedFile;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFileEncryptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFileEncryptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_file_encryption, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFileEncryptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.actionRadioGroup;
      RadioGroup actionRadioGroup = ViewBindings.findChildViewById(rootView, id);
      if (actionRadioGroup == null) {
        break missingId;
      }

      id = R.id.buttonPickFile;
      Button buttonPickFile = ViewBindings.findChildViewById(rootView, id);
      if (buttonPickFile == null) {
        break missingId;
      }

      id = R.id.buttonPickKey;
      Button buttonPickKey = ViewBindings.findChildViewById(rootView, id);
      if (buttonPickKey == null) {
        break missingId;
      }

      id = R.id.buttonPickOutputDir;
      Button buttonPickOutputDir = ViewBindings.findChildViewById(rootView, id);
      if (buttonPickOutputDir == null) {
        break missingId;
      }

      id = R.id.buttonProcess;
      Button buttonProcess = ViewBindings.findChildViewById(rootView, id);
      if (buttonProcess == null) {
        break missingId;
      }

      id = R.id.radioDecrypt;
      RadioButton radioDecrypt = ViewBindings.findChildViewById(rootView, id);
      if (radioDecrypt == null) {
        break missingId;
      }

      id = R.id.radioEncrypt;
      RadioButton radioEncrypt = ViewBindings.findChildViewById(rootView, id);
      if (radioEncrypt == null) {
        break missingId;
      }

      ScrollView scroll = (ScrollView) rootView;

      id = R.id.spinnerCipher;
      Spinner spinnerCipher = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCipher == null) {
        break missingId;
      }

      id = R.id.textChosenKey;
      TextView textChosenKey = ViewBindings.findChildViewById(rootView, id);
      if (textChosenKey == null) {
        break missingId;
      }

      id = R.id.textOutputDir;
      TextView textOutputDir = ViewBindings.findChildViewById(rootView, id);
      if (textOutputDir == null) {
        break missingId;
      }

      id = R.id.textResult;
      TextView textResult = ViewBindings.findChildViewById(rootView, id);
      if (textResult == null) {
        break missingId;
      }

      id = R.id.textSelectedFile;
      TextView textSelectedFile = ViewBindings.findChildViewById(rootView, id);
      if (textSelectedFile == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityFileEncryptionBinding((ScrollView) rootView, actionRadioGroup,
          buttonPickFile, buttonPickKey, buttonPickOutputDir, buttonProcess, radioDecrypt,
          radioEncrypt, scroll, spinnerCipher, textChosenKey, textOutputDir, textResult,
          textSelectedFile, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.encrypt.bwt.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.encrypt.bwt.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OverlayDraggablePanelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCloseOverlay;

  @NonNull
  public final Button btnExecute;

  @NonNull
  public final Button btnPickKey;

  @NonNull
  public final LinearLayout draggableRootLayout;

  @NonNull
  public final EditText edtInput;

  @NonNull
  public final EditText edtOutput;

  @NonNull
  public final Spinner spinnerCipher;

  @NonNull
  public final Spinner spinnerMode;

  @NonNull
  public final TextView textChosenKey;

  private OverlayDraggablePanelBinding(@NonNull LinearLayout rootView,
      @NonNull Button btnCloseOverlay, @NonNull Button btnExecute, @NonNull Button btnPickKey,
      @NonNull LinearLayout draggableRootLayout, @NonNull EditText edtInput,
      @NonNull EditText edtOutput, @NonNull Spinner spinnerCipher, @NonNull Spinner spinnerMode,
      @NonNull TextView textChosenKey) {
    this.rootView = rootView;
    this.btnCloseOverlay = btnCloseOverlay;
    this.btnExecute = btnExecute;
    this.btnPickKey = btnPickKey;
    this.draggableRootLayout = draggableRootLayout;
    this.edtInput = edtInput;
    this.edtOutput = edtOutput;
    this.spinnerCipher = spinnerCipher;
    this.spinnerMode = spinnerMode;
    this.textChosenKey = textChosenKey;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OverlayDraggablePanelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OverlayDraggablePanelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.overlay_draggable_panel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OverlayDraggablePanelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCloseOverlay;
      Button btnCloseOverlay = ViewBindings.findChildViewById(rootView, id);
      if (btnCloseOverlay == null) {
        break missingId;
      }

      id = R.id.btnExecute;
      Button btnExecute = ViewBindings.findChildViewById(rootView, id);
      if (btnExecute == null) {
        break missingId;
      }

      id = R.id.btnPickKey;
      Button btnPickKey = ViewBindings.findChildViewById(rootView, id);
      if (btnPickKey == null) {
        break missingId;
      }

      LinearLayout draggableRootLayout = (LinearLayout) rootView;

      id = R.id.edtInput;
      EditText edtInput = ViewBindings.findChildViewById(rootView, id);
      if (edtInput == null) {
        break missingId;
      }

      id = R.id.edtOutput;
      EditText edtOutput = ViewBindings.findChildViewById(rootView, id);
      if (edtOutput == null) {
        break missingId;
      }

      id = R.id.spinnerCipher;
      Spinner spinnerCipher = ViewBindings.findChildViewById(rootView, id);
      if (spinnerCipher == null) {
        break missingId;
      }

      id = R.id.spinnerMode;
      Spinner spinnerMode = ViewBindings.findChildViewById(rootView, id);
      if (spinnerMode == null) {
        break missingId;
      }

      id = R.id.textChosenKey;
      TextView textChosenKey = ViewBindings.findChildViewById(rootView, id);
      if (textChosenKey == null) {
        break missingId;
      }

      return new OverlayDraggablePanelBinding((LinearLayout) rootView, btnCloseOverlay, btnExecute,
          btnPickKey, draggableRootLayout, edtInput, edtOutput, spinnerCipher, spinnerMode,
          textChosenKey);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
